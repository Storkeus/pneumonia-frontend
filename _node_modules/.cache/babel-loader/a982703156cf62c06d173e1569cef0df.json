{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    email: '',\n    token: '',\n    permissions: ''\n  },\n  reducers: {\n    login: (state, action) => {\n      const {\n        login,\n        token,\n        permissions\n      } = action;\n      console.log('LOGOWANIE');\n      state.login = login;\n    }\n  }\n});\nexport const {\n  login\n} = counterSlice.actions; // The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\n\nexport const loginAsync = (login, password) => dispatch => {\n  setTimeout(() => {\n    dispatch(login(login, password));\n  }, 1000);\n}; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\n\nexport const selectCount = state => state.counter.count;\nexport default counterSlice.reducer;","map":{"version":3,"sources":["/mnt/x/put/praca-inzynierska/frontend/app/src/Redux/Slices/Counter.js"],"names":["createSlice","userSlice","name","initialState","email","token","permissions","reducers","login","state","action","console","log","counterSlice","actions","loginAsync","password","dispatch","setTimeout","selectCount","counter","count","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;AACnCE,EAAAA,IAAI,EAAE,MAD6B;AAEnCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,KAAK,EAAE,EAFK;AAGZC,IAAAA,WAAW,EAAE;AAHD,GAFqB;AAOnCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,EAAE,CAACC,KAAD,EAAOC,MAAP,KAAkB;AACvB,YAAM;AAACF,QAAAA,KAAD;AAAOH,QAAAA,KAAP;AAAaC,QAAAA;AAAb,UAA0BI,MAAhC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAH,MAAAA,KAAK,CAACD,KAAN,GAAYA,KAAZ;AACD;AALO;AAPyB,CAAD,CAA7B;AAgBP,OAAO,MAAM;AAAEA,EAAAA;AAAF,IAAYK,YAAY,CAACC,OAA/B,C,CAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,UAAU,GAAG,CAACP,KAAD,EAAOQ,QAAP,KAAoBC,QAAQ,IAAI;AACxDC,EAAAA,UAAU,CAAC,MAAM;AACfD,IAAAA,QAAQ,CAACT,KAAK,CAACA,KAAD,EAAOQ,QAAP,CAAN,CAAR;AACD,GAFS,EAEP,IAFO,CAAV;AAGD,CAJM,C,CAMP;AACA;AACA;;AACA,OAAO,MAAMG,WAAW,GAAGV,KAAK,IAAIA,KAAK,CAACW,OAAN,CAAcC,KAA3C;AAEP,eAAeR,YAAY,CAACS,OAA5B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    email: '',\n    token: '',\n    permissions: ''\n  },\n  reducers: {\n    login: (state,action) => {\n      const {login,token,permissions}=action;\n      console.log('LOGOWANIE');\n      state.login=login;\n    },\n  },\n});\n\nexport const { login } = counterSlice.actions;\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\nexport const loginAsync = (login,password) => dispatch => {\n  setTimeout(() => {\n    dispatch(login(login,password));\n  }, 1000);\n};\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectCount = state => state.counter.count;\n\nexport default counterSlice.reducer;"]},"metadata":{},"sourceType":"module"}